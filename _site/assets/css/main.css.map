{
	"version": 3,
	"file": "main.css",
	"sources": [
		"main.sass",
		"assets/css/2-base/_-base-index.sass",
		"assets/css/2-base/_vars.sass",
		"assets/css/2-base/_base.sass",
		"assets/css/2-base/_placeholders.sass",
		"assets/css/1-tools/_-tools-index.sass",
		"assets/css/1-tools/bourbon/_bourbon.scss",
		"assets/css/1-tools/bourbon/settings/_prefixer.scss",
		"assets/css/1-tools/bourbon/settings/_px-to-em.scss",
		"assets/css/1-tools/bourbon/settings/_asset-pipeline.scss",
		"assets/css/1-tools/bourbon/helpers/_convert-units.scss",
		"assets/css/1-tools/bourbon/helpers/_gradient-positions-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_is-num.scss",
		"assets/css/1-tools/bourbon/helpers/_linear-angle-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_linear-gradient-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_linear-positions-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_linear-side-corner-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_radial-arg-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_radial-positions-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_radial-gradient-parser.scss",
		"assets/css/1-tools/bourbon/helpers/_render-gradients.scss",
		"assets/css/1-tools/bourbon/helpers/_shape-size-stripper.scss",
		"assets/css/1-tools/bourbon/helpers/_str-to-num.scss",
		"assets/css/1-tools/bourbon/functions/_assign.scss",
		"assets/css/1-tools/bourbon/functions/_color-lightness.scss",
		"assets/css/1-tools/bourbon/functions/_flex-grid.scss",
		"assets/css/1-tools/bourbon/functions/_golden-ratio.scss",
		"assets/css/1-tools/bourbon/functions/_grid-width.scss",
		"assets/css/1-tools/bourbon/functions/_modular-scale.scss",
		"assets/css/1-tools/bourbon/functions/_px-to-em.scss",
		"assets/css/1-tools/bourbon/functions/_px-to-rem.scss",
		"assets/css/1-tools/bourbon/functions/_strip-units.scss",
		"assets/css/1-tools/bourbon/functions/_tint-shade.scss",
		"assets/css/1-tools/bourbon/functions/_transition-property-name.scss",
		"assets/css/1-tools/bourbon/functions/_unpack.scss",
		"assets/css/1-tools/bourbon/css3/_animation.scss",
		"assets/css/1-tools/bourbon/css3/_appearance.scss",
		"assets/css/1-tools/bourbon/css3/_backface-visibility.scss",
		"assets/css/1-tools/bourbon/css3/_background.scss",
		"assets/css/1-tools/bourbon/css3/_background-image.scss",
		"assets/css/1-tools/bourbon/css3/_border-image.scss",
		"assets/css/1-tools/bourbon/css3/_border-radius.scss",
		"assets/css/1-tools/bourbon/css3/_box-sizing.scss",
		"assets/css/1-tools/bourbon/css3/_calc.scss",
		"assets/css/1-tools/bourbon/css3/_columns.scss",
		"assets/css/1-tools/bourbon/css3/_filter.scss",
		"assets/css/1-tools/bourbon/css3/_flex-box.scss",
		"assets/css/1-tools/bourbon/css3/_font-face.scss",
		"assets/css/1-tools/bourbon/css3/_font-feature-settings.scss",
		"assets/css/1-tools/bourbon/css3/_hyphens.scss",
		"assets/css/1-tools/bourbon/css3/_hidpi-media-query.scss",
		"assets/css/1-tools/bourbon/css3/_image-rendering.scss",
		"assets/css/1-tools/bourbon/css3/_keyframes.scss",
		"assets/css/1-tools/bourbon/css3/_linear-gradient.scss",
		"assets/css/1-tools/bourbon/css3/_perspective.scss",
		"assets/css/1-tools/bourbon/css3/_radial-gradient.scss",
		"assets/css/1-tools/bourbon/css3/_transform.scss",
		"assets/css/1-tools/bourbon/css3/_transition.scss",
		"assets/css/1-tools/bourbon/css3/_user-select.scss",
		"assets/css/1-tools/bourbon/css3/_placeholder.scss",
		"assets/css/1-tools/bourbon/addons/_button.scss",
		"assets/css/1-tools/bourbon/addons/_clearfix.scss",
		"assets/css/1-tools/bourbon/addons/_directional-values.scss",
		"assets/css/1-tools/bourbon/addons/_ellipsis.scss",
		"assets/css/1-tools/bourbon/addons/_font-family.scss",
		"assets/css/1-tools/bourbon/addons/_hide-text.scss",
		"assets/css/1-tools/bourbon/addons/_html5-input-types.scss",
		"assets/css/1-tools/bourbon/addons/_position.scss",
		"assets/css/1-tools/bourbon/addons/_prefixer.scss",
		"assets/css/1-tools/bourbon/addons/_retina-image.scss",
		"assets/css/1-tools/bourbon/addons/_size.scss",
		"assets/css/1-tools/bourbon/addons/_timing-functions.scss",
		"assets/css/1-tools/bourbon/addons/_triangle.scss",
		"assets/css/1-tools/bourbon/addons/_word-wrap.scss",
		"assets/css/1-tools/bourbon/_bourbon-deprecated-upcoming.scss",
		"assets/css/1-tools/_normalize.scss",
		"assets/css/1-tools/_fonts.scss",
		"assets/css/1-tools/animations/_animations-dir.sass",
		"assets/css/1-tools/animations/_bounceOut.scss",
		"assets/css/1-tools/animations/_fadeIn.sass",
		"assets/css/1-tools/animations/_bottomUp.sass",
		"assets/css/1-tools/animations/_none.sass",
		"assets/css/1-tools/animations/_topDown.sass",
		"assets/css/1-tools/animations/_bottomDoor.sass",
		"assets/css/1-tools/animations/_topDoor.sass",
		"assets/css/1-tools/animations/_leftRight.sass",
		"assets/css/1-tools/animations/_rightLeft.sass",
		"assets/css/1-tools/animations/_backgroundIn.sass",
		"assets/css/1-tools/animations/_textSlide.sass",
		"assets/css/1-tools/_animation.scss",
		"assets/css/1-tools/_spinner.scss",
		"assets/css/1-tools/_icon-font.scss",
		"assets/css/3-modules/_-modules-index.sass",
		"assets/css/3-modules/_header.sass",
		"assets/css/3-modules/_footer.sass",
		"assets/css/3-modules/_about.sass",
		"assets/css/3-modules/_work.sass",
		"assets/css/3-modules/_clients.sass",
		"assets/css/3-modules/_contact.sass",
		"assets/css/3-modules/_form.sass",
		"assets/css/4-pages/_-pages-index.sass"
	],
	"sourcesContent": [
		"$animation: bounceOut;\n$logo-path: 'logo.svg';\n$hero-path: 'hero-img-bg.jpg';\n$avatar: 'face.JPG';\n\n$projects: \"proj-1\", \"proj-2\", \"proj-3\", \"proj-4\", \"proj-5\", \"proj-6\", \"proj-7\", \"proj-8\";\n@import '2-base/-base-index';\n@import '1-tools/-tools-index';\n@import '3-modules/-modules-index';\n@import '4-pages/-pages-index';\n",
		"@import 'vars';\n@import 'base';\n@import \"placeholders\";\n",
		"$primary-color: #F6C;\n$text-color: #2E2D33;\n$accent-color: #BD5248;\n$bg-color: #F6F6F8;\n$link-color: $accent-color;\n$selection-color: #FFF498;\n\n$accent-light: #e1c184;\n$accent: #c99065;\n$bgcolor: #e5eaee;\n$documentBackgroundColor: #fff;\n",
		"//\tTypography\n\n.gigantic, .huge, .large, .bigger, .big,\nh1, h2, h3, h4, h5, h6 {\n  color: $accent-color;\n  font-weight: bold; }\n\n.gigantic {\n  font-size: 110px;\n  line-height: 1.09;\n  letter-spacing: -2px; }\n\n.huge, h1 {\n  font-size: 68px;\n  line-height: 1.05;\n  letter-spacing: -1px; }\n\n.large, h2 {\n  font-size: 42px;\n  line-height: 1.14; }\n\n.bigger, h3 {\n  font-size: 26px;\n  line-height: 1.38; }\n\n.big, h4 {\n  font-size: 22px;\n  line-height: 1.38; }\n\n.small, small {\n  font-size: 10px;\n  line-height: 1.2; }\n\n\n\np {\n  margin: 0 0 20px 0; }\n\nem {\n  font-style: italic; }\n\nstrong {\n  font-weight: bold; }\n\nhr {\n  border: solid #ddd;\n  border-width: 1px 0 0;\n  clear: both;\n  margin: 10px 0 30px;\n  height: 0; }\n\n\n\n// Links\n\na {\n  color: $link-color;\n  text-decoration: none;\n  outline: 0; }\n\na:hover, a:focus {\n  color: lighten($link-color, 20%); }\n\n\n\n// Selection colors (easy to forget)\n\n::selection {\n  background: $selection-color; }\n\n::-moz-selection {\n  background: $selection-color; }\n\nimg::selection {\n  background: transparent; }\n\nimg::-moz-selection {\n  background: transparent; }\n\nbody {\n  -webkit-tap-highlight-color: $selection-color; }\n\n\n\n// Basic Styles\n\nbody {\n  background: $bg-color;\n  font-size: 14px;\n  line-height: 1.6;\n  font-family: 'Open Sans' sans-serif;\n  color: $text-color;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n\n  h3 {\n    @extend %small-bold;\n    color: $accent-light;\n    text-align: center;\n    padding: 100px 0 30px; } }\n\n@media screen and (max-width: 480px) {\n    h3 {\n      padding: 50px 0 50px; } }\n",
		"%small-bold {\n  font-weight: 700;\n  font-size: 14px;\n  text-transform: uppercase; }\n\n%skill-color {\n  background: $bgcolor; }\n\n%bg-img {\n  background-repeat: no-repeat, no-repeat;\n  background-size: 50px 50px, cover;\n  background-position: 30px 50px, 50% 50%;\n  background-blend-mode: overlay, normal; }\n",
		"@import 'bourbon/bourbon';\n@import 'normalize';\n@import 'fonts';\n//was commented before\n@import 'animations/_animations-dir';\n//in case of error recomment it\n@import 'animation';\n@import 'spinner';\n@import 'icon-font';\n",
		"// Settings\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n// Custom Helpers\n@import \"helpers/convert-units\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/is-num\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n// Custom Functions\n@import \"functions/assign\";\n@import \"functions/color-lightness\";\n@import \"functions/flex-grid\";\n@import \"functions/golden-ratio\";\n@import \"functions/grid-width\";\n@import \"functions/modular-scale\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/strip-units\";\n@import \"functions/tint-shade\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n\n// CSS3 Mixins\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/border-radius\";\n@import \"css3/box-sizing\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hyphens\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/radial-gradient\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n@import \"css3/placeholder\";\n\n// Addons & other mixins\n@import \"addons/button\";\n@import \"addons/clearfix\";\n@import \"addons/directional-values\";\n@import \"addons/ellipsis\";\n@import \"addons/font-family\";\n@import \"addons/hide-text\";\n@import \"addons/html5-input-types\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n// Soon to be deprecated Mixins\n@import \"bourbon-deprecated-upcoming\";\n",
		"// Variable settings for /addons/prefixer.scss\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default; // required for keyframe mixin\n",
		"$em-base: 16px !default;\n",
		"$asset-pipeline: false !default;\n",
		"//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax', 'deg', 'rad', 'grad', 'turn';\n  $units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax,  1deg,  1rad,  1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n  @return $number * nth($units, $index);\n}\n",
		"@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n",
		"//************************************************************************//\n// Helper for linear-gradient-parser\n//************************************************************************//\n@function _is-num($char) {\n  $values: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9' 0 1 2 3 4 5 6 7 8 9;\n  $index: index($values, $char);\n  @return if($index, true, false);\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n",
		"@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: _is-num(str-slice($first-val, 0, 0));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n",
		"@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatability\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatability\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n",
		"// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 0, $has-multiple-vals - 1 );\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 0, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n",
		"@function _radial-arg-parser($G1, $G2, $pos, $shape-size) {\n  @each $value in $G1, $G2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $G1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $G1 {\n            $G1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $G1 {\n            $G1: null;\n          }\n\n          @else if $value == $G2 {\n            $G2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $G1, $G2, $pos, $shape-size;\n}\n",
		"@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != '  ') {\n    $spec: \"#{$spec},\"\n  }\n\n  @return $pre-spec $spec;\n}\n",
		"@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 0, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    )\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    )\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    )\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    )\n  }\n\n  @return $gradients;\n}\n",
		"// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n",
		"@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n",
		"//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == '-' {\n      $minus: true;\n    }\n\n    @else if $character == '.' {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n",
		"@function assign-inputs($inputs, $pseudo: null) {\n  $list : ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}",
		"// Programatically determines whether a color is light or dark\n// Returns a boolean\n// More details here http://robots.thoughtbot.com/closer-look-color-lightness\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1.0));\n  $-local-green: green(rgba($hex-color, 1.0));\n  $-local-blue: blue(rgba($hex-color, 1.0));\n\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > .6;\n}\n",
		"// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n// The $fg-column, $fg-gutter and $fg-max-columns variables must be defined in your base stylesheet to properly use the flex-grid function.\n// This function takes the fluid grid equation (target / context = result) and uses columns to help define each.\n//\n// The calculation presumes that your column structure will be missing the last gutter:\n//\n//   -- column -- gutter -- column -- gutter -- column\n//\n//  $fg-column: 60px;             // Column Width\n//  $fg-gutter: 25px;             // Gutter Width\n//  $fg-max-columns: 12;          // Total Columns For Main Container\n//\n//  div {\n//    width: flex-grid(4);        // returns (315px / 995px) = 31.65829%;\n//    margin-left: flex-gutter(); // returns (25px / 995px) = 2.51256%;\n//\n//    p {\n//      width: flex-grid(2, 4);  // returns (145px / 315px) = 46.031746%;\n//      float: left;\n//      margin: flex-gutter(4);  // returns (25px / 315px) = 7.936508%;\n//    }\n//\n//    blockquote {\n//      float: left;\n//      width: flex-grid(2, 4); // returns (145px / 315px) = 46.031746%;\n//    }\n//  }",
		"@function golden-ratio($value, $increment) {\n  @return modular-scale($value, $increment, $golden)\n}\n",
		"@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n// The $gw-column and $gw-gutter variables must be defined in your base stylesheet to properly use the grid-width function.\n//\n//  $gw-column: 100px;         // Column Width\n//  $gw-gutter: 40px;          // Gutter Width\n//\n//  div {\n//    width: grid-width(4);    // returns 520px;\n//    margin-left: $gw-gutter; // returns 40px;\n//  }\n",
		"// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n@function modular-scale($value, $increment, $ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n",
		"// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n      $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n      $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n",
		"// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n      $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n      $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n",
		"// Srtips the units from a value. e.g. 12px -> 12\n\n@function strip-units($val) {\n  @return ($val / ($val * 0 + 1));\n}\n",
		"// Add percentage of white to a color\n@function tint($color, $percent){\n  @return mix(white, $color, $percent);\n}\n\n// Add percentage of black to a color\n@function shade($color, $percent){\n  @return mix(black, $color, $percent);\n}\n",
		"// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n\t$new-props: ();\n\t\n\t@each $prop in $props {\n\t\t$new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n\t}\n\n\t@return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n\t// put other properties that need to be prefixed here aswell\n\t@if $vendor and $prop == transform {\n\t\t@return unquote('-'+$vendor+'-'+$prop);\n\t}\n\t@else {\n\t\t@return $prop;\n\t}\n}",
		"// Convert shorthand to the 4-value syntax\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  }\n  @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  }\n  @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  }\n  @else {\n    @return $shorthand;\n  }\n}\n\n",
		"// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n// Official animation shorthand property.\n@mixin animation ($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n// Individual Animation Properties\n@mixin animation-name ($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n\n@mixin animation-duration ($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n\n@mixin animation-timing-function ($motions...) {\n// ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n\n@mixin animation-iteration-count ($values...) {\n// infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n\n@mixin animation-direction ($directions...) {\n// normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n\n@mixin animation-play-state ($states...) {\n// running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n\n@mixin animation-delay ($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n\n@mixin animation-fill-mode ($modes...) {\n// none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n",
		"@mixin appearance ($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n",
		"//************************************************************************//\n// Backface-visibility mixin\n//************************************************************************//\n@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n",
		"//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 0, 3);\n      $gradient-type: str-slice($background-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n          $spec-background: $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n          $spec-background: $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n        $spec-background: $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n",
		"//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 0, 3);\n      $gradient-type: str-slice($image, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n          $spec-image: $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n",
		"@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 0, 3);\n      $gradient-type: str-slice($border-str, 0, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n          $spec-border: $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n          $spec-border: $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n        $spec-border: $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n",
		"//************************************************************************//\n// Shorthand Border-radius mixins\n//************************************************************************//\n@mixin border-top-radius($radii) {\n  @include prefixer(border-top-left-radius, $radii, spec);\n  @include prefixer(border-top-right-radius, $radii, spec);\n}\n\n@mixin border-bottom-radius($radii) {\n  @include prefixer(border-bottom-left-radius, $radii, spec);\n  @include prefixer(border-bottom-right-radius, $radii, spec);\n}\n\n@mixin border-left-radius($radii) {\n  @include prefixer(border-top-left-radius, $radii, spec);\n  @include prefixer(border-bottom-left-radius, $radii, spec);\n}\n\n@mixin border-right-radius($radii) {\n  @include prefixer(border-top-right-radius, $radii, spec);\n  @include prefixer(border-bottom-right-radius, $radii, spec);\n}\n",
		"@mixin box-sizing ($box) {\n//  content-box | border-box | inherit\n  @include prefixer(box-sizing, $box, webkit moz spec);\n}\n",
		"@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}:         calc(#{$value});\n}\n",
		"@mixin columns($arg: auto) {\n// <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n// auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n// normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n// auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n// <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n// none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n// none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n// auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n",
		"@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n\n",
		"// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0.0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n//  flex | inline-flex\n    @if $value == \"flex\" {\n        // 2009\n        display: -webkit-box;\n        display: -moz-box;\n        display: box;\n\n        // 2012\n        display: -webkit-flex;\n        display: -moz-flex;\n        display: -ms-flexbox; // 2011 (IE 10)\n        display: flex;\n    }\n\n    @elseif $value == \"inline-flex\" {\n        display: -webkit-inline-box;\n        display: -moz-inline-box;\n        display: inline-box;\n\n        display: -webkit-inline-flex;\n        display: -moz-inline-flex;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n    }\n\n    @else {\n        display: $value;\n    }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n    // Grab flex-grow for older browsers.\n    $flex-grow: nth($value, 1);\n\n    // 2009\n    @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n    // 2011 (IE 10), 2012\n    @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)      \n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n    // Alt values.\n    $value-2009: $value;\n    $value-2011: $value;\n    $direction: \"normal\";\n\n    @if $value == row {\n        $value-2009: horizontal;\n    }\n\n    @elseif $value == \"row-reverse\" {\n        $value-2009: horizontal;\n        $direction: reverse;\n    }\n\n    @elseif $value == column {\n        $value-2009: vertical;\n    }\n\n    @elseif $value == \"column-reverse\" {\n        $value-2009: vertical;\n        $direction: reverse;\n    }\n\n    // 2009\n    @include prefixer(box-orient, $value-2009, webkit moz spec);\n    @if $direction == \"reverse\" {\n        @include prefixer(box-direction, $direction, webkit moz spec);\n    }\n\n    // 2012\n    @include prefixer(flex-direction, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n\n    // Alt values.\n    $alt-value: $value;\n    @if $value == nowrap {\n        $alt-value: single;\n    }\n\n    @elseif $value == wrap {\n        $alt-value: multiple;\n    }\n\n    @elseif $value == \"wrap-reverse\" {\n        $alt-value: multiple;\n    }\n\n    @include prefixer(box-lines, $alt-value, webkit moz spec);\n    @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n    @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n    // 2009\n    @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n    // 2012\n    @include prefixer(order, $int, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n    @include prefixer(flex-grow, $number, webkit moz spec);\n    -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n    @include prefixer(flex-shrink, $number, webkit moz spec);\n    -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n    @include prefixer(flex-basis, $width, webkit moz spec);\n    -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content ($value: flex-start) {\n\n    // Alt values.\n    $alt-value: $value;\n    @if $value == \"flex-start\" {\n        $alt-value: start;\n    }\n\n    @elseif $value == \"flex-end\" {\n        $alt-value: end;\n    }\n\n    @elseif $value == \"space-between\" {\n        $alt-value: justify;\n    }\n\n    @elseif $value == \"space-around\" {\n        $alt-value: center;\n    }\n\n    // 2009\n    @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n    // 2012\n    @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n    // 2011 (IE 10)\n    -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n    $alt-value: $value;\n\n    @if $value == \"flex-start\" {\n        $alt-value: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $alt-value: end;\n    }\n\n    // 2009\n    @include prefixer(box-align, $alt-value, webkit moz spec);\n\n    // 2012\n    @include prefixer(align-items, $value, webkit moz ms o spec);\n    \n    // 2011 (IE 10)\n    -ms-flex-align: $alt-value;    \n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n    $value-2011: $value;\n    @if $value == \"flex-start\" {\n        $value-2011: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $value-2011: end;\n    }\n\n    // 2012\n    @include prefixer(align-self, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n    $value-2011: $value;\n    @if $value == \"flex-start\" {\n        $value-2011: start;\n    }    \n\n    @elseif $value == \"flex-end\" {\n        $value-2011: end;\n    }\n\n    @elseif $value == \"space-between\" {\n        $value-2011: justify;\n    }\n\n    @elseif $value == \"space-around\" {\n        $value-2011: distribute;\n    }\n\n    // 2012\n    @include prefixer(align-content, $value, webkit moz spec);\n\n    // 2011 (IE 10)\n    -ms-flex-line-pack: $value-2011;\n}\n\n",
		"// Order of the includes matters, and it is: normal, bold, italic, bold+italic.\n\n@mixin font-face($font-family, $file-path, $weight: normal, $style: normal, $asset-pipeline: $asset-pipeline) {\n  @font-face {\n    font-family: $font-family;\n    font-weight: $weight;\n    font-style: $style;\n\n    @if $asset-pipeline == true {\n      src: font-url('#{$file-path}.eot');\n      src: font-url('#{$file-path}.eot?#iefix')          format('embedded-opentype'),\n           font-url('#{$file-path}.woff')                format('woff'),\n           font-url('#{$file-path}.ttf')                 format('truetype'),\n           font-url('#{$file-path}.svg##{$font-family}') format('svg');\n    } @else {\n      src: url('#{$file-path}.eot');\n      src: url('#{$file-path}.eot?#iefix')               format('embedded-opentype'),\n           url('#{$file-path}.woff')                     format('woff'),\n           url('#{$file-path}.ttf')                      format('truetype'),\n           url('#{$file-path}.svg##{$font-family}')      format('svg');\n    }\n  }\n}\n",
		"// Font feature settings mixin and property default.\n// Examples: @include font-feature-settings(\"liga\");\n//           @include font-feature-settings(\"lnum\" false);\n//           @include font-feature-settings(\"pnum\" 1, \"kern\" 0);\n//           @include font-feature-settings(\"ss01\", \"ss02\");\n\n@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}",
		"@mixin hyphens($hyphenation: none) {\n// none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}",
		"// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: #{round($ratio*96)}dpi),\n  only screen and (min-resolution: #{$ratio}dppx) {\n    @content;\n  }\n}\n",
		"@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n      -ms-interpolation-mode: nearest-neighbor; // IE8+\n      image-rendering: -moz-crisp-edges;\n      image-rendering: -o-crisp-edges;\n      image-rendering: -webkit-optimize-contrast;\n      image-rendering: crisp-edges;\n  }\n\n  @else {\n      image-rendering: $mode;\n  }\n}\n",
		"// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n",
		"@mixin linear-gradient($pos, $G1, $G2: null,\n                       $G3: null, $G4: null,\n                       $G5: null, $G6: null,\n                       $G7: null, $G8: null,\n                       $G9: null, $G10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $G10: $G9; $G9: $G8; $G8: $G7; $G7: $G6; $G6: $G5;\n     $G5: $G4; $G4: $G3; $G3: $G2; $G2: $G1; $G1: $pos;\n     $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\n\n  // Set $G1 as the default fallback color\n  $fallback-color: nth($G1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n",
		"@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n",
		"// Requires Sass 3.1+\n@mixin radial-gradient($G1,        $G2,\n                       $G3: null, $G4: null,\n                       $G5: null, $G6: null,\n                       $G7: null, $G8: null,\n                       $G9: null, $G10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($G1, $G2, $pos, $shape-size);\n  $G1:  nth($data, 1);\n  $G2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $G1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, '#{$shape-size}, ', null);\n  $pos:        if($pos, '#{$pos}, ', null);\n  $pos-spec:   if($pos, 'at #{$pos}', null);\n  $shape-size-spec: if(($shape-size-spec != ' ') and ($pos == null), '#{$shape-size-spec}, ', '#{$shape-size-spec} ');\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(unquote(#{$pos}#{$shape-size}#{$full}));\n  background-image: unquote(\"radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full})\");\n}\n",
		"@mixin transform($property: none) {\n//  none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n// x-axis - left | center | right  | length | %\n// y-axis - top  | center | bottom | length | %\n// z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style ($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n",
		"// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition ($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n         $moz: append($moz,    $list2);\n        $spec: append($spec,   $list3);\n    }\n\n    // Create lists for non-prefixed transition properties\n    @else {\n      $webkit:  append($webkit, $list, comma);\n      $moz:     append($moz,    $list, comma);\n      $spec:    append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  }\n  @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n\n    @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property ($properties...) {\n   -webkit-transition-property: transition-property-names($properties, 'webkit');\n      -moz-transition-property: transition-property-names($properties, 'moz');\n           transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration ($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function ($motions...) {\n// ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay ($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n",
		"@mixin user-select($arg: none) {\n  @include prefixer(user-select, $arg, webkit moz ms spec);\n}\n",
		"@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n",
		"@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n}\n\n\n// Selector Style Button\n//************************************************************************//\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n\n// Simple Button\n//************************************************************************//\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n\n// Shiny Button\n//************************************************************************//\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    cursor: pointer;\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n\n// Pill Button\n//************************************************************************//\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n    background-clip: padding-box;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n\n\n// Flat Button\n//************************************************************************//\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: none;\n  color: $color;\n  display: inline-block;\n  font-size: inherit;\n  font-weight: bold;\n  padding: 7px 18px;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n",
		"// Modern micro clearfix provides an easy way to contain floats without adding additional markup.\n//\n// Example usage:\n//\n//    // Contain all floats within .wrapper\n//    .wrapper {\n//      @include clearfix;\n//      .content,\n//      .sidebar {\n//        float : left;\n//      }\n//    }\n\n@mixin clearfix {\n  &:after {\n    content:\"\";\n    display:table;\n    clear:both;\n  }\n}\n\n// Acknowledgements\n// Beat *that* clearfix: [Thierry Koblentz](http://www.css-101.org/articles/clearfix/latest-new-clearfix-so-far.php)\n",
		"// directional-property mixins are shorthands\n// for writing properties like the following\n//\n// @include margin(null 0 10px);\n// ------\n// margin-right: 0;\n// margin-bottom: 10px;\n// margin-left: 0;\n//\n// - or -\n//\n// @include border-style(dotted null);\n// ------\n// border-top-style: dotted;\n// border-bottom-style: dotted;\n//\n// ------\n//\n// Note: You can also use false instead of null\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $A: nth( $vals, 1 );\n  $B: if( length($vals) < 2, $A, nth($vals, 2));\n  $C: if( length($vals) < 3, $A, nth($vals, 3));\n  $D: if( length($vals) < 2, $A, nth($vals, if( length($vals) < 4, 2, 4) ));\n\n  @if $A == 0 { $A: 0 }\n  @if $B == 0 { $B: 0 }\n  @if $C == 0 { $C: 0 }\n  @if $D == 0 { $D: 0 }\n\n  @if $A == $B and $A == $C and $A == $D { $output: $A          }\n  @else if $A == $C and $B == $D         { $output: $A $B       }\n  @else if $B == $D                      { $output: $A $B $C    }\n  @else                                  { $output: $A $B $C $D }\n\n  @return $output;\n}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    // prop: top/bottom right/left\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n\n    // prop: top right/left bottom\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n\n    // prop: top right bottom left\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n\n  // prop: top/right/bottom/left\n  } @else {\n    #{$all}: $vals;\n  }\n}\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n",
		"@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n",
		"$georgia: Georgia, Cambria, \"Times New Roman\", Times, serif;\n$helvetica: \"Helvetica Neue\", Helvetica, Roboto, Arial, sans-serif;\n$lucida-grande: \"Lucida Grande\", Tahoma, Verdana, Arial, sans-serif;\n$monospace: \"Bitstream Vera Sans Mono\", Consolas, Courier, monospace;\n$verdana: Verdana, Geneva, sans-serif;\n",
		"@mixin hide-text {\n  overflow: hidden;\n\n  &:before {\n    content: \"\";\n    display: block;\n    width: 0;\n    height: 100%;\n  }\n}\n",
		"//************************************************************************//\n// Generate a variable ($all-text-inputs) with a list of all html5\n// input types that have a text-based input, excluding textarea.\n// http://diveintohtml5.org/forms.html\n//************************************************************************//\n$inputs-list: 'input[type=\"email\"]',\n              'input[type=\"number\"]',\n              'input[type=\"password\"]',\n              'input[type=\"search\"]',\n              'input[type=\"tel\"]',\n              'input[type=\"text\"]',\n              'input[type=\"url\"]',\n\n              // Webkit & Gecko may change the display of these in the future\n              'input[type=\"color\"]',\n              'input[type=\"date\"]',\n              'input[type=\"datetime\"]',\n              'input[type=\"datetime-local\"]',\n              'input[type=\"month\"]',\n              'input[type=\"time\"]',\n              'input[type=\"week\"]';\n\n// Bare inputs\n//************************************************************************//\n$all-text-inputs: assign-inputs($inputs-list);\n\n// Hover Pseudo-class\n//************************************************************************//\n$all-text-inputs-hover: assign-inputs($inputs-list, hover);\n\n// Focus Pseudo-class\n//************************************************************************//\n$all-text-inputs-focus: assign-inputs($inputs-list, focus);\n\n\n\n// You must use interpolation on the variable:\n// #{$all-text-inputs}\n// #{$all-text-inputs-hover}\n// #{$all-text-inputs-focus}\n\n// Example\n//************************************************************************//\n//   #{$all-text-inputs}, textarea {\n//     border: 1px solid red;\n//   }\n\n\n\n//************************************************************************//\n// Generate a variable ($all-button-inputs) with a list of all html5\n// input types that have a button-based input, excluding button.\n//************************************************************************//\n$inputs-button-list: 'input[type=\"button\"]',\n                     'input[type=\"reset\"]',\n                     'input[type=\"submit\"]';\n\n// Bare inputs\n//************************************************************************//\n$all-button-inputs: assign-inputs($inputs-button-list);\n\n// Hover Pseudo-class\n//************************************************************************//\n$all-button-inputs-hover: assign-inputs($inputs-button-list, hover);\n\n// Focus Pseudo-class\n//************************************************************************//\n$all-button-inputs-focus: assign-inputs($inputs-button-list, focus);\n\n// Active Pseudo-class\n//************************************************************************//\n$all-button-inputs-active: assign-inputs($inputs-button-list, active);\n\n\n\n// You must use interpolation on the variable:\n// #{$all-button-inputs}\n// #{$all-button-inputs-hover}\n// #{$all-button-inputs-focus}\n// #{$all-button-inputs-active}\n\n// Example\n//************************************************************************//\n//   #{$all-button-inputs}, button {\n//     border: 1px solid red;\n//   }\n",
		"@mixin position ($position: relative, $coordinates: null null null null) {\n\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $top: nth($coordinates, 1);\n  $right: nth($coordinates, 2);\n  $bottom: nth($coordinates, 3);\n  $left: nth($coordinates, 4);\n\n  position: $position;\n\n  @if ($top and $top == auto) or (type-of($top) == number) {\n    top: $top;\n  }\n\n  @if ($right and $right == auto) or (type-of($right) == number) {\n    right: $right;\n  }\n\n  @if ($bottom and $bottom == auto) or (type-of($bottom) == number) {\n    bottom: $bottom;\n  }\n\n  @if ($left and $left == auto) or (type-of($left) == number) {\n    left: $left;\n  }\n}\n",
		"//************************************************************************//\n// Example: @include prefixer(border-radius, $radii, webkit ms spec);\n//************************************************************************//\n// Variables located in /settings/_prefixer.scss\n\n@mixin prefixer ($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    }\n    @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    }\n    @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    }\n    @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    }\n    @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    }\n    @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n",
		"@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  }\n  @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      }\n      @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      }\n      @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n\n  }\n}\n",
		"@mixin size($size) {\n  $height: nth($size, 1);\n  $width: $height;\n\n  @if length($size) > 1 {\n    $height: nth($size, 2);\n  }\n\n  @if $height == auto or (type-of($height) == number and not unitless($height)) {\n    height: $height;\n  }\n\n  @if $width == auto or (type-of($width) == number and not unitless($width)) {\n    width: $width;\n  }\n}\n",
		"// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n// Timing functions are the same as demo'ed here: http://jqueryui.com/resources/demos/effect/easing.html\n\n// EASE IN\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n// EASE OUT\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n// EASE IN OUT\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n",
		"@mixin triangle ($size, $color, $direction) {\n  height: 0;\n  width: 0;\n\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-bottom: $height solid $foreground-color;\n\n    } @else if $direction == right {\n      border-top: $width solid $background-color;\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n\n    } @else if $direction == left {\n      border-top: $width solid $background-color;\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n    }\n  }\n\n  @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  }\n\n  @else if ($direction == inset-up) {\n    border-width: $height $width;\n    border-style: solid;\n    border-color: $background-color $background-color $foreground-color;\n  }\n\n  @else if ($direction == inset-down) {\n    border-width: $height $width;\n    border-style: solid;\n    border-color: $foreground-color $background-color $background-color;\n  }\n\n  @else if ($direction == inset-right) {\n    border-width: $width $height;\n    border-style: solid;\n    border-color: $background-color $background-color $background-color $foreground-color;\n  }\n\n  @else if ($direction == inset-left) {\n    border-width: $width $height;\n    border-style: solid;\n    border-color: $background-color $foreground-color $background-color $background-color;\n  }\n}\n",
		"@mixin word-wrap($wrap: break-word) {\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    overflow-wrap: break-word;\n    word-break: break-all;\n  }\n}\n",
		"//************************************************************************//\n// These mixins/functions are deprecated\n// They will be removed in the next MAJOR version release\n//************************************************************************//\n@mixin inline-block {\n  display: inline-block;\n  @warn \"inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n",
		"// normalize.css v3.0.1 | MIT License | git.io/normalize\nhtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{\n  margin:0\n}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:0 0}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\n//\n",
		"@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans'), local('OpenSans'), url(//themes.googleusercontent.com/static/fonts/opensans/v8/cJZKeOuBrn4kERxqtaUH3bO3LdcAZYWl9Si6vvxL-qU.woff) format('woff');\n}",
		"@import 'bounceOut';\n@import 'fadeIn';\n@import 'bottomUp';\n@import 'none';\n@import 'topDown';\n@import 'bottomDoor';\n@import 'topDoor';\n@import 'leftRight';\n@import 'rightLeft';\n@import 'backgroundIn';\n@import 'textSlide';\n",
		"/* \n  Animation: bounceOut\n  Source: Bounce.Js */\n\n// Initial Class\n%animationstart_bounceOut{\n  height: 0%;\n  width: 0%;\n  top: 0%;\n  overflow: hidden;\n}\n\n// Animation Class\n%bounceOut {\n  -webkit-animation: animation 1s linear both;\n  animation: animation 1s linear both;\n  z-index: 2;\n}\n\n@-webkit-keyframes animation { \n  0% {height: 0%; width: 0%; -webkit-transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  3.333333% {height: 100%; width: 100%; -webkit-transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  6.666667% { -webkit-transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  10% { -webkit-transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  13.333333% { -webkit-transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  16.666667% { -webkit-transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  20% { -webkit-transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  23.333333% { -webkit-transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  26.666667% { -webkit-transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  30% { -webkit-transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  33.333333% { -webkit-transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  36.666667% { -webkit-transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  40% { -webkit-transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  43.333333% { -webkit-transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  46.666667% { -webkit-transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  50% { -webkit-transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  53.333333% { -webkit-transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  56.666667% { -webkit-transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  60% { -webkit-transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.333333% { -webkit-transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  66.666667% { -webkit-transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  70% { -webkit-transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  73.333333% { -webkit-transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  76.666667% { -webkit-transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  80% { -webkit-transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  83.333333% { -webkit-transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  86.666667% { -webkit-transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  90% { -webkit-transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  93.333333% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  96.666667% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {height: 100%; width: 100%;  -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } \n}\n\n@keyframes animation { \n  0% {height: 0%; width: 0%;  -webkit-transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  3.333333% {height: 100%; width: 100%;  -webkit-transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  6.666667% { -webkit-transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  10% { -webkit-transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  13.333333% { -webkit-transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  16.666667% { -webkit-transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  20% { -webkit-transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  23.333333% { -webkit-transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  26.666667% { -webkit-transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  30% { -webkit-transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  33.333333% { -webkit-transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  36.666667% { -webkit-transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  40% { -webkit-transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  43.333333% { -webkit-transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  46.666667% { -webkit-transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  50% { -webkit-transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  53.333333% { -webkit-transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  56.666667% { -webkit-transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  60% { -webkit-transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  63.333333% { -webkit-transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  66.666667% { -webkit-transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  70% { -webkit-transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  73.333333% { -webkit-transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  76.666667% { -webkit-transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  80% { -webkit-transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  83.333333% { -webkit-transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  86.666667% { -webkit-transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  90% { -webkit-transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  93.333333% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  96.666667% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\n  100% {height: 100%; width: 100%;  -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); } \n}",
		"/*\n\tAnimation: fadeIn\n\tSource: Dylan Spicker (but like really, no skill needed here) */\n\n// Initial Class\n%animationstart_fadeIn {\n\topacity: 0;\n\t@include transition(opacity 500ms linear 0s);\n\t@include size(100%);\n\ttop: 0%; }\n\n// Animation Class\n%fadeIn {\n\topacity: 1; }\n",
		"/*\n\tAnimation: bottomUp\n\tSource: Travis Nielson */\n\n// Initial Class\n%animationstart_bottomUp {\n\t@include size(100%);\n\t@include position(absolute, 100% 0px null 0px);\n\t@include transition; }\n\n// Animation Class\n%bottomUp {\n\topacity: 1;\n\ttop: 0%; }\n",
		"/*\n\tAnimation: none\n\tSource: Dylan Spicker (but like really, no skill needed here) */\n\n// Initial Class\n%animationstart_none {\n\t@include size(0%);\n\ttop: 0%;\n\toverflow: hidden; }\n\n// Animation Class\n%none {\n\t@include size(100%); }\n",
		"/*\n\tAnimation: topDown\n\tSource: Dylan Spicker (but really, Travis Nielson) */\n\n// Initial Conditions\n%animationstart_topDown {\n\t@include size(100%);\n\t@include position(absolute, -100% 0px null 0px);\n\t@include transition; }\n\n%topDown {\n\ttop: 0%; }\n",
		"/*\n\tAnimation: bottomDoor\n\tSource: Travis Nielson */\n\n// Initial Conditions\n%animationstart_bottomDoor {\n\t@include size(100%);\n\t@include position(absolute, 50% 0px null 0px);\n\t@include transition(800ms);\n\t@include transform(rotateX(90deg));\n\t@include transform-origin(center bottom); }\n\n%bottomDoor {\n\ttop: 0%;\n\t@include transform(rotateX(0deg)); }\n",
		"/*\n\tAnimation: topDoor\n\tSource: Dylan Spicker (but really, Travis Nielson) */\n\n// Initial Conditions\n%animationstart_topDoor {\n\t@include size(100%);\n\t@include position(absolute, -50% 0px null 0px);\n\t@include transition(1s);\n\t@include transform(rotateX(90deg));\n\t@include transform-origin(center top); }\n\n%topDoor {\n\ttop: 0%;\n\t@include transform(rotateX(0deg)); }\n",
		"/*\n\tAnimation: leftRight\n\tSource: Dylan Spicker (but like really, no skill needed here) */\n\n// Initial Class\n%animationstart_leftRight {\n\ttop: 0%;\n\tleft: -100%;\n\t@include size(100%);\n\t@include transition(800ms); }\n\n// Animation Class\n%leftRight {\n\tleft: 0%; }\n",
		"/*\n\tAnimation: rightLeft\n\tSource: Dylan Spicker (but like really, no skill needed here) */\n\n// Initial Class\n%animationstart_rightLeft {\n\ttop: 0%;\n\tleft: 100%;\n\t@include size(100%);\n\t@include transition(800ms); }\n\n// Animation Class\n%rightLeft {\n\tleft: 0%; }\n",
		"/*\n\tAnimation: backgroundIn\n\tSource: Dylan Spicker (but like really, no skill needed here) */\n\n// Initial Class\n%animationstart_backgroundIn {\n\ttop: 0%;\n\t@include size(100%);\n\t@include transition(800ms);\n\tbackground: transparent !important;\n\n\t& strong {\n\t\t@include transition(800ms);\n\t\ttext-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black; } }\n\n// Animation Class\n%backgroundIn {\n\tleft: 0%;\n\tbackground: fade-out($accent, 0.4) !important; }\n",
		"/*\n\tAnimation: textSlide\n\tSource: Dylan Spicker (but like really, no skill needed here) */\n\n// Initial Class\n%animationstart_textSlide {\n\ttop: 0%;\n\t@include size(100%);\n\t@include transition(800ms);\n\tleft: -100%;\n\n\t& strong {\n\t\t@include transition(margin-left 700ms linear, background 200ms linear 900ms);\n\t\tmargin-left: 400%;\n\t\tdisplay: block;\n\t\twidth: 100%; } }\n\n// Animation Class\n%textSlide {\n\tleft: 0%;\n\n\t& strong {\n\t\tmargin-left: 0%;\n\t\tbackground: rgba(0,0,0,0.2); } }\n",
		"/*\r\n  Animation: bounceOut\r\n  Source: Bounce.Js */\r\n\r\n// Animation Class\r\n%animation {\r\n  -webkit-animation: animation 1s linear both;\r\n  animation: animation 1s linear both;\r\n  z-index: 2;\r\n}\r\n\r\n@-webkit-keyframes animation {\r\n  0% {height: 0%; width: 0%; -webkit-transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  3.333333% {height: 100%; width: 100%; -webkit-transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  6.666667% { -webkit-transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  10% { -webkit-transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  13.333333% { -webkit-transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  16.666667% { -webkit-transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  20% { -webkit-transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  23.333333% { -webkit-transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  26.666667% { -webkit-transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  30% { -webkit-transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  33.333333% { -webkit-transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  36.666667% { -webkit-transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  40% { -webkit-transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  43.333333% { -webkit-transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  46.666667% { -webkit-transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  50% { -webkit-transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  53.333333% { -webkit-transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  56.666667% { -webkit-transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  60% { -webkit-transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  63.333333% { -webkit-transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  66.666667% { -webkit-transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  70% { -webkit-transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  73.333333% { -webkit-transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  76.666667% { -webkit-transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  80% { -webkit-transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  83.333333% { -webkit-transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  86.666667% { -webkit-transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  90% { -webkit-transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  93.333333% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  96.666667% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  100% {height: 100%; width: 100%;  -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n}\r\n\r\n@keyframes animation {\r\n  0% {height: 0%; width: 0%;  -webkit-transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  3.333333% {height: 100%; width: 100%;  -webkit-transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  6.666667% { -webkit-transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  10% { -webkit-transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  13.333333% { -webkit-transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  16.666667% { -webkit-transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  20% { -webkit-transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  23.333333% { -webkit-transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  26.666667% { -webkit-transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  30% { -webkit-transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  33.333333% { -webkit-transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  36.666667% { -webkit-transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  40% { -webkit-transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  43.333333% { -webkit-transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  46.666667% { -webkit-transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  50% { -webkit-transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  53.333333% { -webkit-transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  56.666667% { -webkit-transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  60% { -webkit-transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  63.333333% { -webkit-transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  66.666667% { -webkit-transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  70% { -webkit-transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  73.333333% { -webkit-transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  76.666667% { -webkit-transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  80% { -webkit-transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  83.333333% { -webkit-transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  86.666667% { -webkit-transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  90% { -webkit-transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  93.333333% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  96.666667% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  100% {height: 100%; width: 100%;  -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n}/*\r\n  Animation: bounceOut\r\n  Source: Bounce.Js */\r\n\r\n// Initial Class\r\n%animationstart_bounceOut{\r\n  height: 0%;\r\n  width: 0%;\r\n  top: 0%;\r\n  overflow: hidden;\r\n}\r\n\r\n// Animation Class\r\n%bounceOut {\r\n  -webkit-animation: animation 1s linear both;\r\n  animation: animation 1s linear both;\r\n  z-index: 2;\r\n}\r\n\r\n@-webkit-keyframes animation {\r\n  0% {height: 0%; width: 0%; -webkit-transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  3.333333% {height: 100%; width: 100%; -webkit-transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  6.666667% { -webkit-transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  10% { -webkit-transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  13.333333% { -webkit-transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  16.666667% { -webkit-transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  20% { -webkit-transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  23.333333% { -webkit-transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  26.666667% { -webkit-transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  30% { -webkit-transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  33.333333% { -webkit-transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  36.666667% { -webkit-transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  40% { -webkit-transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  43.333333% { -webkit-transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  46.666667% { -webkit-transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  50% { -webkit-transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  53.333333% { -webkit-transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  56.666667% { -webkit-transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  60% { -webkit-transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  63.333333% { -webkit-transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  66.666667% { -webkit-transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  70% { -webkit-transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  73.333333% { -webkit-transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  76.666667% { -webkit-transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  80% { -webkit-transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  83.333333% { -webkit-transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  86.666667% { -webkit-transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  90% { -webkit-transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  93.333333% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  96.666667% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  100% {height: 100%; width: 100%;  -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n}\r\n\r\n@keyframes animation {\r\n  0% {height: 0%; width: 0%;  -webkit-transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  3.333333% {height: 100%; width: 100%;  -webkit-transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.34323, 0.11487, 0, 0, 0.07506, 0.34323, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  6.666667% { -webkit-transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.65416, 0.2159, 0, 0, 0.14115, 0.65416, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  10% { -webkit-transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.88518, 0.18431, 0, 0, 0.1219, 0.88518, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  13.333333% { -webkit-transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.02792, 0.0976, 0, 0, 0.06496, 1.02792, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  16.666667% { -webkit-transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09602, 0.02621, 0, 0, 0.01747, 1.09602, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  20% { -webkit-transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.1117, -0.0094, 0, 0, -0.00627, 1.1117, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  23.333333% { -webkit-transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.09709, -0.01805, 0, 0, -0.01203, 1.09709, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  26.666667% { -webkit-transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0698, -0.0143, 0, 0, -0.00954, 1.0698, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  30% { -webkit-transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.04151, -0.00794, 0, 0, -0.0053, 1.04151, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  33.333333% { -webkit-transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.01844, -0.00306, 0, 0, -0.00204, 1.01844, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  36.666667% { -webkit-transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00277, -0.00038, 0, 0, -0.00025, 1.00277, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  40% { -webkit-transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99411, 0.00064, 0, 0, 0.00043, 0.99411, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  43.333333% { -webkit-transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99083, 0.00076, 0, 0, 0.0005, 0.99083, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  46.666667% { -webkit-transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.991, 0.00053, 0, 0, 0.00035, 0.991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  50% { -webkit-transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99292, 0.00027, 0, 0, 0.00018, 0.99292, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  53.333333% { -webkit-transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99535, 0.00008, 0, 0, 0.00006, 0.99535, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  56.666667% { -webkit-transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99755, -0.00001, 0, 0, 0, 0.99755, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  60% { -webkit-transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99919, -0.00004, 0, 0, -0.00002, 0.99919, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  63.333333% { -webkit-transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.0002, -0.00003, 0, 0, -0.00002, 1.0002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  66.666667% { -webkit-transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00068, -0.00002, 0, 0, -0.00001, 1.00068, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  70% { -webkit-transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00079, -0.00001, 0, 0, -0.00001, 1.00079, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  73.333333% { -webkit-transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00069, 0, 0, 0, 0, 1.00069, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  76.666667% { -webkit-transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00049, 0, 0, 0, 0, 1.00049, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  80% { -webkit-transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00029, 0, 0, 0, 0, 1.00029, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  83.333333% { -webkit-transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00013, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  86.666667% { -webkit-transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1.00002, 0, 0, 0, 0, 1.00002, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  90% { -webkit-transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99996, 0, 0, 0, 0, 0.99996, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  93.333333% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  96.666667% { -webkit-transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(0.99994, 0, 0, 0, 0, 0.99994, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n  100% {height: 100%; width: 100%;  -webkit-transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); }\r\n}\r\n",
		".loader:before,\n.loader:after,\n.loader {\n  border-radius: 50%;\n  width: 2.5em;\n  height: 2.5em;\n  -webkit-animation-fill-mode: both;\n  animation-fill-mode: both;\n  -webkit-animation: load7 1.8s infinite ease-in-out;\n  animation: load7 1.8s infinite ease-in-out;\n}\n.loader {\n  margin: 8em auto;\n  font-size: 10px;\n  position: relative;\n  text-indent: -9999em;\n  -webkit-animation-delay: 0.16s;\n  animation-delay: 0.16s;\n}\n.loader:before {\n  left: -3.5em;\n}\n.loader:after {\n  left: 3.5em;\n  -webkit-animation-delay: 0.32s;\n  animation-delay: 0.32s;\n}\n.loader:before,\n.loader:after {\n  content: '';\n  position: absolute;\n  top: 0;\n}\n@-webkit-keyframes load7 {\n  0%,\n  80%,\n  100% {\n    box-shadow: 0 2.5em 0 -1.3em #ffffff;\n  }\n  40% {\n    box-shadow: 0 2.5em 0 0 #FFF;\n  }\n}\n@keyframes load7 {\n  0%,\n  80%,\n  100% {\n    box-shadow: 0 2.5em 0 -1.3em #ffffff;\n  }\n  40% {\n    box-shadow: 0 2.5em 0 0 #FFF;\n  }\n}",
		"@font-face {\nfont-family: 'icomoon';\nsrc: url('fonts/icomoon.eot');\n}\n@font-face {\nfont-family: 'icomoon';\nsrc: url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype'),\n\t\t url(data:application/font-woff;charset=utf-8;base64,d09GRk9UVE8AABVYAAoAAAAAFRAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABDRkYgAAAA9AAAEVkAABFZoZ4cNE9TLzIAABJQAAAAYAAAAGAIIwiAY21hcAAAErAAAACUAAAAlLcdtxdnYXNwAAATRAAAAAgAAAAIAAAAEGhlYWQAABNMAAAANgAAADYB52+VaGhlYQAAE4QAAAAkAAAAJAR0AoRobXR4AAATqAAAAEAAAABAGLkARG1heHAAABPoAAAABgAAAAYAEFAAbmFtZQAAE/AAAAFFAAABRVcZpu5wb3N0AAAVOAAAACAAAAAgAAMAAAEABAQAAQEBCGljb21vb24AAQIAAQA6+BwC+BsD+BgEHgoAGVP/i4seCgAZU/+LiwwHi2b5J/h0BR0AAAC4Dx0AAAC9ER0AAAAJHQAAEVASABEBAQgPERMWGyAlKi80OT5DSE1SaWNvbW9vbmljb21vb251MHUxdTIwdUYwOTl1RjA5QXVGMDlCdUYwRDJ1RjBENXVGMEUxdUYxNjd1RjE2RHVGMTdEdUYxQjR1RjFCRXVGMUNBAAACAYkADgAQAgABAAQABwAKAA0AxwENAnkDuwWPBkUIlQmuC3EMiA+AEG/8lA78lA78lA77lA5nmNkVkYqTi5OLtouxmKyld4x6kXuXe5eAmoWdkYqRi5GLk4uTjJONdo95ln2cfZyEnouiCIuMBZiDmYiain6TgZaEmYOYh5qLm4uckJqTmaJvp3Sseqx6r4KwiYqSipKLkoullKCdnQidnaGUpIumi6GCnnefj5+TnZWEdn56d3+cjJ2QnZN+eHx7eX6LiIuHi4aLcodzhHIIhHKAdHx0fHR6d3Z6d3lyfm+AboFshmqLWItbmGGnCA77b6b3bRWL39SLi8oFi66Vp5+en5+llKyLp4uhipqJCItAXosFe4uAh4WEhYSIgYt9CItV34uAN0KLi/ttNIuL921CiwUOi/dvFYuzlbCerZ+spqasnq2fsJWyi7OLsIGtd6x4pnCeap9plWaLY4tcfWBvZG9lZ3FffAiGioeMiY2IjYqOi48Ii8cFi52GmYGUloyVjJOOlI2Uj5SQlZCSkZGTkpKQlY+YjpeNmoubi6KEn3ybkpyKnoOhCIWNhIqAh4GHg4eDhgiAhAV6kHiOeIt5i3iIeoaIjoaNho6GjoOPgY+Aj4ONhYmDdYp4knp8e4N3i3SLe418j38Ij3+QgZGDkYOThZSGlYaTh5SJlIiVipWKhISGgYl+h4mHioeKhoqGioSLhYuFjYWQCISPhpGHkoeSho+Gj4WPh42HjAiFjAWHi4iLioqJiouKi4mMioyKjImMioyKjYoIjYoFj4mPh4+Gj4WOh42GCI6FBY2DkIWQh5GHkoiSiZGKkouRipKLkIyPiwiSjQWLg4uDi4GLgYuGi4uLh4qIiImJiYeKhoxfmmelb7Fvsn22i7oIDov3bxWLs5Wwnq2frKamrJ6tn7CVsouzi7CBrXeseKZwnmqfaZVmi2OLZIFmd2l4anBwancIaXhmgWOLdot3jnaRlp2Tmo6ZjZGQoJSsj4SShJWGlYaWiJaLoougkZ2YnZiZnZWiCJWikKWLp4uhhaCAnoCeepp2l3WXc5Fwi3eLeIh6hnmFfYR/gn6CgYCCf4N/hH+HfgiHf4l+i36Ld496k3ySfJaAmoWRiY6NjZGLjIyOjJCMj4yOi4yNkIqPh46Cl4aZi50Ii6eVpJ+gnp+mlquLp4uig5t7m3yTdotyi2uFcH50fnR6gHaLgIuBj4SThJSJlY6WCIySjpSOlo+WjpWNk42UjJKLkYuUiZOGkoWRhI6Ci3+LgYaDgIKAh32Le4t9joCPgQhv+wsFiH6Keot2ZJ1rpXOwc69/s4u3CA5nlOQVi5qPmZSYk5mXlpmTpJuxlL+PhZOHkoiRiJGJkouTi5KNk4+UgoqFi4eLb4tzlHeeCHidgaKLp4ubj5qSmpKalJeXlZqYnJSfkZ+RoI6giwj3DItjcmaLBZl/ln+SfZJ+j3yLeot9iH+HgIaAhYKFhISEhYWEhYSGhoWGhYaFiYSLhYuEjoSRhQiRhJOFk4SUhZSEk4OUhJKBkX+Rf459i3yLeod7gnt9c3d6cIBxgG6GbYtyi3SPdZMIdZN7mICdhJeHl4uZCMCYFYt9j4CRgJKBlIOVhpaFl4eWiJeIl4qYi5aLloyVjpWNlI+UkJSQkpKQlJCUjpWLlwiLkIqPipCJj4qPio+JjomPh5CHj4iPiY2KjYeOhZCGj4iOiYyJjIiOhI+FkIeNi4wIiIuGi4WLgYuBi4GJgYqBiYCHgYiBhoSGg4aEhIaChoKIgYuACKr3sBWLgoyCjIGNgY6Bj4GQgo+CkYORg5KFlIaThpSIlYuTi5KNk46SjpGPkJGWlZCbi54Ii5aJl4iYh5eHmIWXhZeDlIGTgZN/j3+Lg4uDiYSHg4iFhoaEgoCHfIt4CPdt+yEVi6rHi4vJqYuLTciLi2xOi4tNbYuLyU+LBQ6L+BQVi5mQl5WUlZWXj5uLm4uYh5SBlYKQf4t9i32GgIGBgYJ/hnuLCIqLBXuLf5CBlIKVhpaLmQiQ/AYVi/ev6ouL+68siwX3J4sVi9eLyIu7i7qLp4uUCIuZ6YuLYoqLBY+Rj5CPkI+PkJCSkZKQk4+VjpWOloyXi6uLpYGfdZ91lWyLYQiL+zYti4v3KwWLn4ebg5aEln+Reot/i4GIg4SDhYWDh4GJhYqDi4IIi/syLYsFDpP3AxWLt42tkKGOlpCVlJKTk5WPlo2ujsCN0YvSi8CJroiWiZWHk4OUhJCBjoCQdo1pi14Ii16JaoZ1iICGgYKEg4OBh4CJaIdWiUSLRYtWjWiPgI2Bj4OTgpKGlYiWhqCJrYu4CKrSFamLi/s3qIuL9zeqi4umMYuLcAWw97kVqYugQJ7WqItp+waLPm6Li9gFiJqGn4KlhJ+EnIabCMP8PhWLgoyEjYaNhJCHlIuUi5WRlZcIi3uli4v3InGLi/sABYaDhYeGi4iLiY2Kj4uLi46LkgiL83GLi/sEBbb3rRWLvQWLm46WkJKTlJWQl4uZi5WGkoKQhI6Ai3sIi1kFi3yIgIaEhIGBhn2Lf4uBkIOVhpKIlouaCKWGFYt+j4STi5SLj5KLmAiLxwWLmYeRgouDi4eFi30Ii08FpvvGFaSLi5kFlIGUhZSLlYuSkY6VjZCMlYuZCIvDBYuZipSJkIiWhJCBi4GLg4aCgQiLyXKLi/tSBaSnFYvhBZCPj42Pi5OLjoWLfgiLTwWLfoiFg4uHi4eNho8In/efFYv3BaWLiyIFi4SLiIuLjIeNiI6LkIuRkJCTCIv3AaWLi/sjcYuLmwWBf4KFgYuCi4aPiJKKj4qSi5UIvfuNFYt8joCQhJOBlYaYi5mLlZCSlo6QjZCMkIuNi5CLlQiLjnGLBYuCi4WLiYqEh4iEi4OLhpGLmAiLpL6Li6kFi5qJloaSg5SBkH6LfouBhoSChoSIgIt8CItZBaS1FYuYBYuYkJGTi5SLj4WLfgiLfnGLBQ6LwxWL99sFi5qRmJaWlpaYkZqLCPfbiwWai5iFloCWgJF+i3wIi/vbBYt8hX6AgICAfoV8iwj724sFfIt+kYCWgJaFmIuaCLyXFYuGjYeOiI6Hj4qQiwj3xosFj4uQjI6Pjo6Nj4uQCIv3TWWLBY5/jX+LfotzhXV/dn93ent2f3Z/dIVzi2WLa5hwpXGlfaqLsIuYjZePlwhji4v7TQXe9ywVi3STd516nHqgg6OLo4ugk5ycnJyUn4uii6OCn3qcept2lHOLc4t2gnp7eXqDd4tzCPc88hWLho2Gj4ePh4+JkYsIvIsFkYuQjY6Pj4+NkIuQCIu6BYuRiY+Hj4iPho2FiwhaiwWFi4eJh4eHh4mHi4UIi1wFDov3bxWLs5Wwnq2frKamrJ6tn7CVsouzi7CBrXeseKZwnmqfaZVmi2OLZIFmd2l4anBwancIaXhmgWOLZItmlWmeap9wpneseK2BsIuyCKuLFYt0j3SUdpN1l3iaepWclpuZmpmamZaYlJiUmJOWkpeRlJCTjQiVjwWMi4yMjYuNi4yMjIuHlYaVhZdPeUuCRouLiouJi4gIj7IVxYvEk8WadLN0r3OrcX51enl0eHR/cYVuCMv7SxWubrN9t4uli6OQo5WDuX26ebwIiouKiwWIioeJhomGiYGGfYR9hH6Df4N/gn+Bfn1+fYF9hH0I0ffdFYuLi4uMi4qLi4uLiwiMixWka6NnoGKZkJeRl5KWkZSRkpCSkJGRkZCRkY6PjY0IjpAFaKpim1uLfYt8iXyHCOD7HRWPgZCCjoOMiouJjImMiYyJi4qSjJKMk4uSjJKLkouRi5KLkYuSipGLkYqQi5GKkIsIkIqPi4+KkIqOi46KjouNio2LCI6KBYq4fbJvrQiLigWJiYmJioiJiYeHhIWFhISGhIWEhoGFf4R/hH+FfoUIp0kVm12XX5NfoJmdnZmhmaGUo5ClY5ZkjmWFCA7Ui7YVi/f89z6LBZuLmoqYiJiIl4eWhJaFlIKRf5F/jnyLeotoenJrfKCEnIGWe5Z7kHeLdIt9iX6GfwiHgISBhIODg4GEgIaBhX+Hf4l/iH6KfosI+0OLBdrIFeCLBbKLnpuLq4uteJxliwg1i4soBYv3LRXbiwWai5ePlJKTkpCWi5mLp3mYZosIQYuLNwX3ijcVi7KXrKSmpKWrmLKLpouhhJ9+n36ZepV2lHaQdItwi4iLh4uFCPtQiwWLdpB7ln+Wf5uGoIuX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) format('woff');\nfont-weight: normal;\nfont-style: normal;\n}\n\n[class^=\"icon-\"], [class*=\" icon-\"] {\nfont-family: 'icomoon';\nspeak: none;\nfont-style: normal;\nfont-weight: normal;\nfont-variant: normal;\ntext-transform: none;\nline-height: 1;\n/* Better Font Rendering =========== */\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\n}\n\n.icon-twitter:before {\n\tcontent: \"\\f099\";\n}\n.icon-facebook:before {\n\tcontent: \"\\f09a\";\n}\n.icon-github:before {\n\tcontent: \"\\f09b\";\n}\n.icon-pinterest:before {\n\tcontent: \"\\f0d2\";\n}\n.icon-google-plus:before {\n\tcontent: \"\\f0d5\";\n}\n.icon-linkedin:before {\n\tcontent: \"\\f0e1\";\n}\n.icon-youtube:before {\n\tcontent: \"\\f167\";\n}\n.icon-instagram:before {\n\tcontent: \"\\f16d\";\n}\n.icon-dribbble:before {\n\tcontent: \"\\f17d\";\n}\n.icon-behance:before {\n\tcontent: \"\\f1b4\";\n}\n.icon-soundcloud:before {\n\tcontent: \"\\f1be\";\n}\n.icon-vine:before {\n\tcontent: \"\\f1ca\";\n}\n",
		"@import \"header\";\n@import \"footer\";\n@import \"about\";\n@import \"work\";\n@import \"clients\";\n@import \"contact\";\n@import \"form\";\n",
		"header {\n  background-image: url(/assets/img/#{$logo-path}),url(/assets/img/#{$hero-path});\n  @extend %bg-img;\n  background-position: 30px 20px, 50% 50%;\n  padding-bottom: 50px;\n\n  nav {\n    float: right;\n    padding: 30px 30px 0 0;\n    a {\n      display: inline-block;\n      margin-left: 20px;\n\n      @extend %small-bold;\n      color: rgba(0, 0, 0, 0.7);\n\n      &:hover {\n        color: rgba(0, 0, 0, 1); } } }\n\n  h1 {\n    text-align: center;\n    font-size: 72px;\n    font-weight: 700;\n    color: white;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n    margin-bottom: 20px;\n    clear: both;\n    padding-top: 100px;\n\n    span {\n      display: inline-block;\n      padding: 0.2em 0.5em;\n      border: white solid 10px; } }\n\n  .kicker {\n    text-align: center;\n    @extend %small-bold;\n    letter-spacing: 0.05em;\n    color: white;\n    line-height: 1; } }\n\n@media (max-width: 640px) {\n  header {\n    background-position: 50% 20px, 50% 50%;\n\n    nav {\n      float: none;\n      text-align: center;\n      padding-top: 90px; }\n\n    h1 {\n      padding-top: 0px; } } }\n",
		"footer {\n  @extend %bg-img;\n  background-image: url(/assets/img/#{$logo-path}),url(/assets/img/#{$hero-path});\n\n\n  .lockup {\n    padding: 50px 30px;\n    @include clearfix;\n\n\n    .content-wrap {\n      float: left;\n      margin-left: 80px;\n\n      .copyright {\n        margin: 0;\n        text-transform: uppercase;\n        font-size: 12px;\n        color: rgba(0, 0, 0, 0.4); }\n\n      a {\n        @extend %small-bold;\n        color: rgba(0, 0, 0, 0.5);\n        display: inline-block;\n        margin-right: 30px;\n\n        &:hover {\n          color: rgba(0, 0, 0, 0.7); } } } } }\n",
		".face-lockup {\n  max-width: 780px;\n  @include display(flex);\n  margin: 0 auto;\n  @include align-items(center);\n  @include justify-content(space-between);\n\n\n  .face-img {\n    @include size(200px);\n    border-radius: 50%;\n    background-size: cover;\n    background-position: center;\n    background-image: url(/assets/img/#{$avatar});\n    @include order(3); }\n\n  [class^=\"icon-\"] {\n    //put because of the size of the svg logos\n    @include size(50px);\n    background: $bgcolor;\n    border-radius: 50%;\n\n    path {\n      fill: $accent; }\n\n    &.icon-pencil {\n      @include order(1); }\n    &.icon-mouse {\n      @include order(2); }\n    &.icon-browser {\n      @include order(4); }\n    &.icon-video {\n      @include order(5); } } }\n\n\n@media screen and (max-width: 650px) {\n  .face-lockup {\n    display: block;\n    text-align: center;\n\n    div {\n      display: inline-block; }\n\n    .face-img {\n      display: block;\n      background-position: center center;\n      background-repeat: no-repeat;\n      margin: 0 auto 30px; }\n\n    [class^=\"icon-\"] {\n      margin: 10px 9%; } } }\n\n\n.blurb {\n  max-width: 620px;\n  padding: 15px;\n  margin: 50px auto 50px;\n  font-size: 24px;\n  text-align: center;\n  font-weight: 300; }\n\n.skill-lockup {\n  max-width: 700px;\n  margin: 100px auto;\n  color: #999;\n  @include clearfix;\n\n\n  .skill-unit {\n    width: 350px;\n    float: left; }\n\n  .skill-icons {\n    font-size: 0px;\n    margin: 0px 0 30px;\n    span {\n      display: inline-block;\n      @include size(14px);\n      background-color: $accent;\n      margin-right: 5px;\n      border-radius: 50%;\n      &:after {\n        content: '';\n        display: block;\n        @include size(10px);\n        background: #fff;\n        border-radius: 50%;\n        margin: 2px; } }\n    @for $i from 1 through 10 {\n      &.skill-#{$i} span:nth-child(n+#{$i +1}) {\n        @extend %skill-color; } } } }\n\n@media screen and (max-width: 541px) {\n  .skill-lockup {\n    width: 270px; } }\n",
		".section-work {\n  overflow-x: hidden; }\n/* Hackey-type CSS as a jQuery Alternative for when the browser does not have jQuery enabled. */\n.noscript {\n  display: none; }\n\n@each $proj in $projects {\n  ##{$proj}:checked ~ .work-belt .work-wrap .work-container noscript #content-#{$proj} {\n    display: block; } }\n\n.return {\n  display: none; }\n\n.trigger {\n  display: none;\n\n  &:checked ~ .work-belt {\n    left: -100%;\n\n    .work-wrap .work-container {\n      display: block; } } }\n/* End of gross / hackey CSS */\n\n.work-belt {\n  width: 200%;\n  position: relative;\n  left: 0%;\n  @include transition(all 800ms);\n\n  &.slided {\n    @include transform(translate3d(-50%, 0, 0)); } }\n\n.thumb-wrap, .work-wrap {\n  width: 50%;\n  float: left; }\n\n.alt-section {\n  background: $bgcolor; }\n\n.thumb-container {\n  max-width: 960px;\n  margin: 0px auto;\n  padding-bottom: 100px;\n  @include clearfix;\n\n  .thumb-unit {\n    width: 25%;\n    display: block;\n    float: left;\n    position: relative;\n    padding-top: 16%;\n    overflow: hidden;\n    @include perspective(300);\n    @if $animation != \"bounceOut\" {\n      overflow: hidden; }\n\n    @media screen and (max-width: 760px) {\n      width: 50%;\n      padding-top: 26%; }\n\n    background: {\n      position: center center;\n      repeat: no-repeat;\n      size: cover; }\n\n    .thumb-overlay {\n      @include position(absolute);\n      @include align-items(center);\n      @include justify-content(space-around);\n      @include display(flex);\n      background: fade-out($accent, 0.1);\n      text-align: center;\n      @extend %animationstart_#{$animation};\n\n\n      strong {\n        display: block;\n        padding: 0px 20px;\n        color: white;\n        font-weight: 300;\n        text-transform: uppercase;\n        font-size: 24px;\n        line-height: 1.2; } }\n\n\n\n    &:hover {\n      z-index: 2;\n\n      .thumb-overlay {\n        @extend %#{$animation}; } } } }\n\n\n\n.work-container {\n  max-width: 600px;\n  margin: 0px auto;\n  position: relative;\n  display: none;\n\n\n  h4 {\n    color: $accent;\n    font-weight: 300;\n    text-transform: uppercase;\n    font-size: 24px;\n    line-height: 1.2;\n    margin: 0 0 20px; }\n\n  img {\n    max-width: 100%;\n    margin-bottom: 20px; }\n\n  .work-return {\n    @include size(40px);\n    cursor: pointer;\n    opacity: 0.5;\n    @include position(absolute, -4px null null -60px);\n\n    path, fill, stroke {\n      fill: rgba(0, 0, 0, 0.4); }\n    &:hover {\n      opacity: 1; } } }\n\n@media (max-width: 740px) {\n  .work-container {\n    .work-return {\n      left: 0px; }\n\n    h4 {\n      margin-left: 60px; } } }\n",
		".section-clients {\n  position: relative; }\n\n.clients-belt {\n  width: 100%;\n  position: relative;\n\n  .client-unit {\n    max-width: 750px;\n    margin: 50px auto;\n    @include display(flex);\n    position: relative;\n    display: none;\n\n    &.active-client {\n      @include display(flex);\n      @extend %#{$animation}; }\n\n    .client-face {\n      min-width: 300px;\n      text-align: center;\n\n      img {\n        max-width: 100px;\n        border-radius: 50%; }\n\n      .client-name {\n        display: block;\n        text-transform: uppercase;\n        font-weight: 400;\n        letter-spacing: 1px; }\n\n      .client-title {\n        font-size: normal;\n        font-size: 12px;\n        color: #999; } }\n\n\n    .client-content {\n      font-size: 18px;\n      line-height: 36px;\n      font-weight: 300;\n      margin-top: -10px;\n      position: relative; } } }\n\n\n\n.clients-logos {\n  position: relative;\n  max-width: 750px;\n  margin: 50px auto 100px;\n  @include display(flex);\n  @include align-items(flex-end);\n  @include justify-content(space-around);\n\n  .client-logo {\n    z-index: 1;\n    cursor: pointer;\n    margin: 0 20px;\n    opacity: 0.5;\n    border-bottom: 4px solid transparent;\n    padding-bottom: 10px;\n\n    &.active-client {\n      border-bottom: 4px solid $accent;\n      opacity: 1; } } }\n\n.client-quote-mark {\n  @include position(absolute, -20px null null -18px);\n  @include size(60px);\n  z-index: -1;\n  opacity: 0.3;\n\n  path {\n    fill: $accent;\n    &.hover {\n      fill: $accent-light; } } }\n\n.client-controls {\n  @include position(absolute, 0px 0px 0px 0px);\n  z-index: 1;\n  > div {\n    @include size(40px);\n    margin-top: -20px;\n    cursor: pointer;\n\n    path {\n      fill: $accent; } }\n\n  .client-control-next {\n    @include position(absolute, 50% 10px null null); }\n\n\n  .client-control-prev {\n    @include position(absolute, 50% null null 10px); } }\n\n.clients-mobile-nav {\n  text-align: center;\n  display: none;\n\n  span {\n    cursor: pointer;\n    display: inline-block;\n    @include size(16px);\n    border-radius: 50%;\n    border: solid 2px $bgcolor;\n    margin: 0px 10px;\n\n    &.active-client {\n      border-color: $accent; } } }\n\n@media (max-width: 750px) {\n  .client-controls {\n    display: none; }\n\n  .clients-belt {\n    .client-unit.active-client {\n      display: block;\n      position: relative;\n      margin-left: 0px;\n      left: auto;\n\n      .client-face {\n        margin-bottom: 20px; }\n      .client-face {\n        padding: 0px 30px;\n        max-width: 400px;\n        margin: 0px auto; }\n\n      .client-quote-mark {\n        left: 15px; } } }\n\n  .clients-logos {\n    display: none; }\n  .clients-mobile-nav {\n    display: block; } }\n",
		".section-contact {\n  text-align: center; }\n\n.social-links {\n  max-width: 700px;\n  margin: 0px auto 50px;\n  @include display(flex);\n  @include justify-content(space-around);\n  @include flex-wrap(wrap);\n\n  a {\n    display: block;\n    background: $accent;\n    @include size(50px);\n    text-align: center;\n    line-height: 50px;\n    color: white;\n    margin: 20px;\n    border-radius: 50%;\n    font-size: 30px;\n    @include transition;\n\n    &:hover {\n      @include transform(scale(1.2)); } } }\n\n.bar {\n  width: 250px;\n  height: 0px;\n  border-top: 4px solid $accent;\n  margin: 0 auto 70px; }\n\n.biglink {\n  display: inline-block;\n  font-size: 72px;\n  font-weight: 300;\n  line-height: 1;\n\n  @media (max-width: 800px) {\n    font-size: 38px; }\n\n  @media (max-width: 600px) {\n    font-size: 24px; }\n\n  @media (max-width: 480px) {\n    font-size: 18px; } }\n",
		"form {\n  max-width: 450px;\n  margin: 0px auto 50px;\n\n  input, textarea {\n    border: 3px solid $accent;\n    width: 100%;\n    @include box-sizing(border-box);\n    padding: 10px;\n\n    &:focus {\n      outline: none;\n      border-color: $accent-light; } }\n\n  .submit-wrap {\n    text-align: right; }\n\n  [type=\"submit\"] {\n    background: $accent;\n    color: white;\n    font-size: 18px;\n    text-transform: uppercase;\n    width: 33%;\n\n    &:hover {\n      background: $accent-light; } }\n\n\n  textarea {\n    height: 10em; }\n\n  .contact-info {\n\n    label {\n      width: 50%;\n      @include box-sizing(border-box);\n      float: left;\n\n      &:nth-child(1) {\n        padding-right: 10px; }\n      &:nth-child(1) {\n        padding-left: 10px; } } }\n\n  label {\n    display: block;\n    margin-bottom: 20px;\n\n    span {\n      display: block; } } }\n\n// form\n//   max-width: 450px\n//   margin: 0 auto 100px\n//   padding: 0 20px\n//\n//   input, textarea\n//     border: 3px solid $accent\n//     width: 100%\n//     +box-sizing(border-box)\n//     padding: 10px\n//     -webkit-appearance: none\n//     -moz-appearance: none\n//     appearance: none\n//     font-size: 16px\n//\n//     &:focus\n//       outline: none\n//       border-color: $accent-light\n//\n//   textarea\n//     height: 10em\n//\n//   .submit-wrap\n//     text-align: right\n//\n//   [type=\"submit\"]\n//     background: $accent\n//     color: white\n//     font-size: 18px\n//     text-transform: uppercase\n//     width: 33%\n//\n//     &:hover\n//       background: $accent-light\n//\n//\n//\n//\n//\n//   .contact-info\n//\n//     label\n//       width: 50%\n//       float: left\n//       +box-sizing(border-box)\n//\n//       &:nth-child(1)\n//         padding-right: 10px\n//\n//       &:nth-child(2)\n//         padding-left: 10px\n//\n//   label\n//     display: block\n//     margin-bottom: 20px\n//\n//     span\n//       display: block\n",
		""
	],
	"names": [],
	"mappings": "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"
}